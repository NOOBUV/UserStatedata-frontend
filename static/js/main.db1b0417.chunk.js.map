{"version":3,"sources":["components/AddUser.jsx","components/TableRow.jsx","components/TableComp.jsx","components/BarChart.jsx","components/TabsComp.jsx","App.js","index.js"],"names":["AddUser","onAdd","idState","stateId","useState","number","setNumber","name","setName","state","setState","className","Form","onSubmit","e","preventDefault","parseInt","alert","Group","as","Row","controlId","Label","column","sm","Col","Control","type","placeholder","value","onChange","target","Select","Andhra_Pradesh","Arunachal_Pradesh","Assam","Bihar","Chattisgarh","Goa","Gujrat","Haryana","Himachal_Pradesh","Jharkhand","Karnataka","Kerala","Madhya_Pradesh","Maharashtra","Manipur","Meghalya","Mizorm","Nagaland","Odisha","Punjab","Rajasthan","Sikkim","Tamil_Nadu","Telangana","Tripura","Uttar_Pradesh","Uttrakhand","West_Bengal","span","offset","Button","style","backgroundColor","TableRow","userdata","state_name","registration_num","TableComp","user","Table","striped","bordered","hover","width","margin","overflow","map","id","BarChart","stateArr","allState","stateDataArr","i","tempcount","j","length","push","stateData","data","labels","datasets","label","height","TabsComp","Tabs","defaultActiveKey","Tab","eventKey","title","App","setUser","useEffect","getUsers","a","fetchUsers","usersFromServer","fetch","res","json","Array","from","Object","values","addTask","payload","method","headers","body","JSON","stringify","Meghalaya","Mizoram","Orissa","Telengana","Uttarakhand","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db1b0417.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\n\r\nconst AddUser = ({ onAdd, stateId, idState }) => {\r\n  const [number, setNumber] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!number || !name || !state) {\r\n      alert(\"Please add all details asked\");\r\n      return;\r\n    }\r\n\r\n    onAdd([name, number, parseInt(state)]);\r\n\r\n    setNumber(\"\");\r\n    setName(\"\");\r\n    setState(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-wrapper\">\r\n      <div className=\"auth-inner bg-light\">\r\n        <Form\r\n          // style={{ margin: \"0px 5vw 0px 5vw\" }}\r\n          onSubmit={onSubmit}\r\n          className=\"d-flex flex-column \"\r\n        >\r\n          <Form.Group\r\n            as={Row}\r\n            className=\"mb-3 d-flex justify-content-between\"\r\n            controlId=\"formHorizontalEmail\"\r\n          >\r\n            <Form.Label column sm={5}>\r\n              Registration Number\r\n            </Form.Label>\r\n            <Col sm={7}>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter Reg.No (123456...)\"\r\n                value={number}\r\n                onChange={(e) => setNumber(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Row}\r\n            className=\"mb-3\"\r\n            controlId=\"formHorizontalPassword\"\r\n          >\r\n            <Form.Label column sm={2}>\r\n              Name\r\n            </Form.Label>\r\n            <Col sm={10}>\r\n              <Form.Control\r\n                type=\"Name\"\r\n                placeholder=\"Enter Your Name (Firstname Lastname)\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <fieldset>\r\n            <Form.Group as={Row} className=\"mb-3\">\r\n              <Form.Label as=\"legend\" column sm={2}>\r\n                State\r\n              </Form.Label>\r\n              <Col sm={10}>\r\n                <Form.Select\r\n                  className=\"mb-3\"\r\n                  aria-label=\"Default select example\"\r\n                  onChange={(e) => setState(e.target.value)}\r\n                  value={state}\r\n                >\r\n                  <option>Click to open dropdown</option>\r\n                  <option value={idState.Andhra_Pradesh}>Andhra Pradesh</option>\r\n                  <option value={idState.Arunachal_Pradesh}>\r\n                    Arunachal Pradesh\r\n                  </option>\r\n                  <option value={idState.Assam}>Assam</option>\r\n                  <option value={idState.Bihar}>Bihar</option>\r\n                  <option value={idState.Chattisgarh}>Chattisgarh</option>\r\n                  <option value={idState.Goa}>Goa</option>\r\n                  <option value={idState.Gujrat}>Gujrat</option>\r\n                  <option value={idState.Haryana}>Haryana</option>\r\n                  <option value={idState.Himachal_Pradesh}>\r\n                    Himachal Pradesh\r\n                  </option>\r\n                  <option value={idState.Jharkhand}>Jharkhand</option>\r\n                  <option value={idState.Karnataka}>Karnataka</option>\r\n                  <option value={idState.Kerala}>Kerala</option>\r\n                  <option value={idState.Madhya_Pradesh}>Madhya Pradesh</option>\r\n                  <option value={idState.Maharashtra}>Maharashtra</option>\r\n                  <option value={idState.Manipur}>Manipur</option>\r\n                  <option value={idState.Meghalya}>Meghalya</option>\r\n                  <option value={idState.Mizorm}>Mizorm</option>\r\n                  <option value={idState.Nagaland}>Nagaland</option>\r\n                  <option value={idState.Odisha}>Odisha</option>\r\n                  <option value={idState.Punjab}>Punjab</option>\r\n                  <option value={idState.Rajasthan}>Rajasthan</option>\r\n                  <option value={idState.Sikkim}>Sikkim</option>\r\n                  <option value={idState.Tamil_Nadu}>Tamil Nadu</option>\r\n                  <option value={idState.Telangana}>Telangana</option>\r\n                  <option value={idState.Tripura}>Tripura</option>\r\n                  <option value={idState.Uttar_Pradesh}>Uttar Pradesh</option>\r\n                  <option value={idState.Uttrakhand}>Uttrakhand</option>\r\n                  <option value={idState.West_Bengal}>West Bengal</option>\r\n                </Form.Select>\r\n              </Col>\r\n            </Form.Group>\r\n          </fieldset>\r\n          {/* <Form.Group as={Row} className=\"mb-3\" controlId=\"formHorizontalCheck\">\r\n    <Col sm={{ span: 10, offset: 2 }}>\r\n      <Form.Check label=\"Remember me\" />\r\n    </Col>\r\n  </Form.Group> */}\r\n\r\n          <Form.Group as={Row} className=\"mb-3\">\r\n            <Col sm={{ span: 10, offset: 2 }}>\r\n              <Button\r\n                className=\"button\"\r\n                style={{ backgroundColor: \"#0D6EFD\" }}\r\n                type=\"submit\"\r\n              >\r\n                Add\r\n              </Button>\r\n            </Col>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import React from \"react\";\r\n\r\nconst TableRow = ({ userdata, stateId }) => {\r\n  const state = userdata.state_name;\r\n  return (\r\n    <tr>\r\n      {/* <td>{userdata.id}</td> */}\r\n      <td>{userdata.name}</td>\r\n      <td>{userdata.registration_num}</td>\r\n      <td>{stateId[state]}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TableRow;\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport TableRow from \"../components/TableRow\";\r\n\r\nconst TableComp = ({ user, stateId }) => {\r\n  return (\r\n    <Table\r\n      striped\r\n      bordered\r\n      hover\r\n      style={{ width: \"90%\", margin: \"auto\" }}\r\n      className=\"bg-light\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          {/* <th>Id</th> */}\r\n          <th>Name</th>\r\n          <th>Registration Number</th>\r\n          <th>State</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody style={{ overflow: \"auto\" }}>\r\n        {user.map((userdata) => (\r\n          <TableRow key={userdata.id} userdata={userdata} stateId={stateId} />\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TableComp;\r\n","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst BarChart = ({ user, stateArr, allState }) => {\r\n  // stateDataArr to maintain frequency of users with different states\r\n  const stateDataArr = [];\r\n\r\n  const stateData = () => {\r\n    for (let i = 0; i < 29; i++) {\r\n      let tempcount = 0;\r\n      for (let j = 0; j < stateArr.length; j++) {\r\n        if (stateArr[j] === allState[i]) {\r\n          tempcount++;\r\n        }\r\n      }\r\n      stateDataArr.push(tempcount);\r\n    }\r\n  };\r\n  stateData();\r\n\r\n  return (\r\n    <div className=\"barGraphDiv\">\r\n      <Bar\r\n        className=\"barGraph\"\r\n        data={{\r\n          labels: allState,\r\n          datasets: [\r\n            {\r\n              label: \"User count\",\r\n              data: stateDataArr,\r\n              backgroundColor: [\r\n                \"rgba(255, 99, 132, 0.2)\",\r\n                \"rgba(54, 162, 235, 0.2)\",\r\n                \"rgba(255, 206, 86, 0.2)\",\r\n                \"rgba(75, 192, 192, 0.2)\",\r\n                \"rgba(153, 102, 255, 0.2)\",\r\n                \"rgba(255, 159, 64, 0.2)\",\r\n                \"rgba(255, 99, 132, 0.2)\",\r\n                \"rgba(54, 162, 235, 0.2)\",\r\n                \"rgba(255, 206, 86, 0.2)\",\r\n                \"rgba(75, 192, 192, 0.2)\",\r\n                \"rgba(153, 102, 255, 0.2)\",\r\n                \"rgba(255, 159, 64, 0.2)\",\r\n                \"rgba(255, 99, 132, 0.2)\",\r\n                \"rgba(54, 162, 235, 0.2)\",\r\n                \"rgba(255, 206, 86, 0.2)\",\r\n                \"rgba(75, 192, 192, 0.2)\",\r\n                \"rgba(153, 102, 255, 0.2)\",\r\n                \"rgba(255, 159, 64, 0.2)\",\r\n                \"rgba(255, 99, 132, 0.2)\",\r\n                \"rgba(54, 162, 235, 0.2)\",\r\n                \"rgba(255, 206, 86, 0.2)\",\r\n                \"rgba(75, 192, 192, 0.2)\",\r\n                \"rgba(153, 102, 255, 0.2)\",\r\n                \"rgba(255, 159, 64, 0.2)\",\r\n                \"rgba(255, 99, 132, 0.2)\",\r\n                \"rgba(54, 162, 235, 0.2)\",\r\n                \"rgba(255, 206, 86, 0.2)\",\r\n                \"rgba(75, 192, 192, 0.2)\",\r\n                \"rgba(153, 102, 255, 0.2)\",\r\n                \"rgba(255, 159, 64, 0.2)\",\r\n                \"rgba(255, 99, 132, 0.2)\",\r\n                \"rgba(54, 162, 235, 0.2)\",\r\n                \"rgba(255, 206, 86, 0.2)\",\r\n                \"rgba(75, 192, 192, 0.2)\",\r\n                \"rgba(153, 102, 255, 0.2)\",\r\n                \"rgba(255, 159, 64, 0.2)\",\r\n              ],\r\n            },\r\n          ],\r\n        }}\r\n        height={400}\r\n        width={600}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import React from \"react\";\r\nimport { Tabs } from \"react-bootstrap\";\r\nimport { Tab } from \"react-bootstrap\";\r\nimport AddUser from \"../components/AddUser\";\r\nimport TableComp from \"../components/TableComp\";\r\nimport BarChart from \"../components/BarChart\";\r\n\r\nconst TabsComp = ({ onAdd, user, stateId, idState, stateArr, allState }) => {\r\n  return (\r\n    <div>\r\n      <Tabs\r\n        defaultActiveKey=\"AddUser\"\r\n        id=\"uncontrolled-tab-example\"\r\n        className=\"mb-3 bg-light\"\r\n        // style={{ backgroundColor: \"white\"}}\r\n      >\r\n        <Tab eventKey=\"AddUser\" title=\"Add User\">\r\n          <AddUser onAdd={onAdd} stateId={stateId} idState={idState} />\r\n        </Tab>\r\n        <Tab eventKey=\"Grid\" title=\"Grid\">\r\n          <TableComp user={user} stateId={stateId} />\r\n        </Tab>\r\n        <Tab eventKey=\"Chart\" title=\"Chart\">\r\n          <BarChart\r\n            user={user}\r\n            stateId={stateId}\r\n            stateArr={stateArr}\r\n            allState={allState}\r\n          />\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabsComp;\r\n","import \"./App.css\";\nimport TabsComp from \"./components/TabsComp\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [user, setUser] = useState([]);\n\n  // fetching the data\n  useEffect(() => {\n    const getUsers = async () => {\n      const usersFromServer = await fetchUsers();\n      setUser(usersFromServer);\n    };\n    getUsers();\n  }, []);\n\n  const fetchUsers = async () => {\n    const res = await fetch(\"https://userstatemanagement.herokuapp.com/users/\");\n    const data = await res.json();\n    return data;\n  };\n\n  // id to state conversion objects\n\n  const stateId = {\n    1: \"Andhra Pradesh\",\n    2: \"Arunachal Pradesh\",\n    3: \"Assam\",\n    4: \"Bihar\",\n    5: \"Chattisgarh\",\n    6: \"Goa\",\n    7: \"Gujrat\",\n    8: \"Haryana\",\n    9: \"Himachal Pradesh\",\n    10: \"Jharkhand\",\n    11: \"Karnataka\",\n    12: \"Kerala\",\n    13: \"Madhya Pradesh\",\n    14: \"Maharashtra\",\n    15: \"Manipur\",\n    16: \"Meghalaya\",\n    17: \"Mizoram\",\n    18: \"Nagaland\",\n    19: \"Orissa\",\n    20: \"Punjab\",\n    21: \"Rajasthan\",\n    22: \"Sikkim\",\n    23: \"Tamil Nadu\",\n    24: \"Telengana\",\n    25: \"Tripura\",\n    26: \"Uttar Pradesh\",\n    27: \"Uttarakhand\",\n    28: \"West Bengal\",\n  };\n\n  const idState = {\n    Andhra_Pradesh: 1,\n    Arunachal_Pradesh: 2,\n    Assam: 3,\n    Bihar: 4,\n    Chattisgarh: 5,\n    Goa: 6,\n    Gujrat: 7,\n    Haryana: 8,\n    Himachal_Pradesh: 9,\n    Jharkhand: 10,\n    Karnataka: 11,\n    Kerala: 12,\n    Madhya_Pradesh: 13,\n    Maharashtra: 14,\n    Manipur: 15,\n    Meghalaya: 16,\n    Mizoram: 17,\n    Nagaland: 18,\n    Orissa: 19,\n    Punjab: 20,\n    Rajasthan: 21,\n    Sikkim: 22,\n    Tamil_Nadu: 23,\n    Telengana: 24,\n    Tripura: 25,\n    Uttar_Pradesh: 26,\n    Uttarakhand: 27,\n    West_Bengal: 28,\n  };\n\n  // arrays for barchart\n\n  const stateArr = [];\n  const allState = Array.from(Object.values(stateId));\n\n  const state = () => {\n    user.map((userdata) => stateArr.push(stateId[userdata.state_name]));\n  };\n  state();\n\n  // addTask functionality for for add user form\n\n  const addTask = async (userdata) => {\n    let payload = {\n      name: userdata[0],\n      registration_num: userdata[1],\n      state_name: userdata[2],\n    };\n    const res = await fetch(\n      \"https://userstatemanagement.herokuapp.com/users/\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      }\n    );\n\n    const data = await res.json();\n\n    setUser([...user, data]);\n  };\n\n  return (\n    <div className=\"App\">\n      <TabsComp\n        onAdd={addTask}\n        user={user}\n        stateId={stateId}\n        idState={idState}\n        stateArr={stateArr}\n        allState={allState}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}